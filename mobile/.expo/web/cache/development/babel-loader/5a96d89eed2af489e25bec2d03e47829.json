{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Positivo\\\\Documents\\\\GITHUB_repos\\\\omnistack-11.0\\\\mobile\\\\src\\\\pages\\\\Incidents\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport logoImg from \"../../assets/logo.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"./styles.js\";\nimport { Feather } from '@expo/vector-icons';\nimport api from \"../../services/api\";\n\nfunction Incidents() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.length === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            response = api.get('incidents', {\n              params: {\n                page: page\n              }\n            });\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 30\n    }\n  }, total, \" casos\"), \".\")), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Bem-vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    style: styles.incidentList,\n    data: incidents,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, \"Valor:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return avigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Incidents;","map":{"version":3,"sources":["C:/Users/Positivo/Documents/GITHUB_repos/omnistack-11.0/mobile/src/pages/Incidents/index.js"],"names":["React","useState","useEffect","logoImg","useNavigation","styles","Feather","api","Incidents","navigation","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","loadIncidents","length","response","get","params","data","headers","navigateToDetail","incident","navigate","container","header","headerText","title","description","incidentList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","avigateToDetail","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport logoImg from '../../assets/logo.png';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { View, Text, Image, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport styles from './styles.js';\r\n\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nimport api from '../../services/api';\r\n\r\nfunction Incidents(){\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [ incidents, setIncidents ] = useState([]);\r\n    const [ total, setTotal ] = useState(0);\r\n    const [ page, setPage ] = useState(1);\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    async function loadIncidents(){\r\n\r\n        if(loading){\r\n            return;\r\n        }\r\n\r\n        if(total > 0 && incidents.length === total){\r\n            return;\r\n        }\r\n\r\n        setLoading(true)\r\n\r\n        const response = api.get('incidents', {\r\n            params: { page }\r\n        });\r\n       \r\n        setIncidents([...incidents, ...response.data]);\r\n        setTotal(response.headers['x-total-count']);\r\n        setPage(page + 1);\r\n        setLoading(false)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadIncidents();\r\n    }, []);\r\n        \r\n        function navigateToDetail(incident){\r\n        navigation.navigate('Detail', { incident });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Image source={logoImg} />\r\n                <Text style={styles.headerText}>\r\n                    Total de <Text style={styles.headerText}>{total} casos</Text>.\r\n                </Text>\r\n            </View>\r\n\r\n            <Text style={styles.title}>\r\n                Bem-vindo!\r\n            </Text>\r\n            <Text style={styles.description}>\r\n                Escolha um dos casos abaixo e salve o dia.\r\n            </Text>\r\n\r\n            <FlatList \r\n                style={styles.incidentList}\r\n                data={incidents}\r\n                keyExtractor={incident => String(incident.id)}\r\n                showsVerticalScrollIndicator={false}\r\n                onEndReached={loadIncidents}\r\n                onEndReachedThreshold={0.2}\r\n                renderItem={({ item: incident }) => (\r\n                    <View style={styles.incident}>\r\n                       \r\n                        <Text style={styles.incidentProperty}>ONG:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.name}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>CASO:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.title}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>Valor:</Text>\r\n                        \r\n                        <Text style={styles.incidentValue}>{\r\n                        Intl.NumberFormat('pt-BR', \r\n                        { style: 'currency', currency: 'BRL' })\r\n                        .format(incident.value)}\r\n                        </Text>\r\n\r\n                        <TouchableOpacity \r\n                        style={styles.detailsButton} \r\n                        onPress={() => avigateToDetail(incident)}> \r\n                        <Text style={styles.detailsButtonText} >Ver mais detalhes</Text>\r\n                        <Feather name=\"arrow-right\" size={16} color=\"#E02041\"/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Incidents;"]},"metadata":{},"sourceType":"module"}