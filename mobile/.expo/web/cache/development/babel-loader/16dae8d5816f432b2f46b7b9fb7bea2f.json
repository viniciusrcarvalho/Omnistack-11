{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Positivo\\\\Documents\\\\GITHUB_repos\\\\omnistack-11.0\\\\mobile\\\\src\\\\pages\\\\Incidents\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport logoImg from \"../../assets/logo.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"./styles.js\";\nimport { Feather } from '@expo/vector-icons';\nimport api from \"../../services/api\";\n\nfunction Incidents() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            response = api.get('incidents');\n            setIncidents(response.data);\n            setTotal(response.headers['x-total-count']);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }\n  }, total, \" casos\"), \".\")), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Bem-vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    style: styles.incidentList,\n    data: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Valor:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return avigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Incidents;","map":{"version":3,"sources":["C:/Users/Positivo/Documents/GITHUB_repos/omnistack-11.0/mobile/src/pages/Incidents/index.js"],"names":["React","useState","useEffect","logoImg","useNavigation","styles","Feather","api","Incidents","navigation","incidents","setIncidents","total","setTotal","loadIncidents","response","get","data","headers","navigateToDetail","incident","navigate","container","header","headerText","title","description","incidentList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","avigateToDetail","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport logoImg from '../../assets/logo.png';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { View, Text, Image, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport styles from './styles.js';\r\n\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nimport api from '../../services/api';\r\n\r\nfunction Incidents(){\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [ incidents, setIncidents ] = useState([]);\r\n    const [ total, setTotal ] = useState([]);\r\n\r\n    async function loadIncidents(){\r\n        const response = api.get('incidents');\r\n\r\n        setIncidents(response.data);\r\n        setTotal(response.headers['x-total-count']);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadIncidents();\r\n    }, []);\r\n        \r\n        function navigateToDetail(incident){\r\n        navigation.navigate('Detail', { incident });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Image source={logoImg} />\r\n                <Text style={styles.headerText}>\r\n                    Total de <Text style={styles.headerText}>{total} casos</Text>.\r\n                </Text>\r\n            </View>\r\n\r\n            <Text style={styles.title}>\r\n                Bem-vindo!\r\n            </Text>\r\n            <Text style={styles.description}>\r\n                Escolha um dos casos abaixo e salve o dia.\r\n            </Text>\r\n\r\n            <FlatList \r\n                style={styles.incidentList}\r\n                data={[`1`, `2`, `3`, `4`, `5`]}\r\n                keyExtractor={incident => String(incident.id)}\r\n                showsVerticalScrollIndicator={false}\r\n                renderItem={({ item: incident }) => (\r\n                    <View style={styles.incident}>\r\n                       \r\n                        <Text style={styles.incidentProperty}>ONG:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.name}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>CASO:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.title}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>Valor:</Text>\r\n                        \r\n                        <Text style={styles.incidentValue}>{\r\n                        Intl.NumberFormat('pt-BR', \r\n                        { style: 'currency', currency: 'BRL' })\r\n                        .format(incident.value)}\r\n                        </Text>\r\n\r\n                        <TouchableOpacity \r\n                        style={styles.detailsButton} \r\n                        onPress={() => avigateToDetail(incident)}> \r\n                        <Text style={styles.detailsButtonText} >Ver mais detalhes</Text>\r\n                        <Feather name=\"arrow-right\" size={16} color=\"#E02041\"/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Incidents;"]},"metadata":{},"sourceType":"module"}